/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2019-12-29 02:34:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.manage.domain.*;

public final class Fixinformation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.manage.domain");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write(" <title>修改学生信息</title>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <style>\r\n");
      out.write("             html{\r\n");
      out.write("                margin:0;\r\n");
      out.write("                width:100%;\r\n");
      out.write("                height:100%;\r\n");
      out.write("            }\r\n");
      out.write("            body{\r\n");
      out.write("                margin:0\r\n");
      out.write("            }\r\n");
      out.write("            a{\r\n");
      out.write("                text-decoration: none;\r\n");
      out.write("            }\r\n");
      out.write("            li {\r\n");
      out.write("                list-style-type: none;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .header{\r\n");
      out.write("                width: 100%; \r\n");
      out.write("                height:90px; \r\n");
      out.write("                border: 1px solid #cccccc;\r\n");
      out.write("                /* margin:auto 0; */\r\n");
      out.write("                background-color:#c8e4f0;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("            .header .headline{\r\n");
      out.write("                margin-right:62px;\r\n");
      out.write("                margin-left: 70px;\r\n");
      out.write("                margin-top:36px;\r\n");
      out.write("                font-size: 28px;\r\n");
      out.write("            }\r\n");
      out.write("            .main{\r\n");
      out.write("                width:100%;\r\n");
      out.write("                height:470px;\r\n");
      out.write("                background-color:whitesmoke; \r\n");
      out.write("                margin-top:2px;\r\n");
      out.write("                \r\n");
      out.write("            }\r\n");
      out.write("            .main-sector{\r\n");
      out.write("                width:888px;\r\n");
      out.write("                height:470px;\r\n");
      out.write("                margin:0 auto;\r\n");
      out.write("                background-color:#fff;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                border: 1px solid #c0c0c0;\r\n");
      out.write("                position:relative;\r\n");
      out.write("                \r\n");
      out.write("            }\r\n");
      out.write("    \r\n");
      out.write("        .fixInfo {\r\n");
      out.write("            margin-top:9px;\r\n");
      out.write("            width:250px;\r\n");
      out.write("            height:28px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("        .submit{\r\n");
      out.write("            margin-top:10px;\r\n");
      out.write("            width:60px;\r\n");
      out.write("            height:30px;\r\n");
      out.write("        }\r\n");
      out.write("        .backword{\r\n");
      out.write("            /* float:right; */\r\n");
      out.write("            margin-right: 50px;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top:68px;\r\n");
      out.write("            right:138px;\r\n");
      out.write("        }\r\n");
      out.write("/* \r\n");
      out.write("css注释：设置table背景为红色，td背景为白色 */ \r\n");
      out.write("        </style>\r\n");
      out.write("        ");

        
        	String sid = request.getParameter("sid");
        	List<StudentInfo> sInfos = (List<StudentInfo>)session.getAttribute("students");
        	StudentInfo sInfo = null;
        	if(sid != null && sInfos != null){
        		for(StudentInfo s : sInfos){
        			if(s.getsId().equals(sid))
        				sInfo = s;
        		}
        		
        	}
        
        
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"header\">\r\n");
      out.write("            <h3 class=\"headline\">修改信息</h3>\r\n");
      out.write("            <a class=\"backword\" href=\"StudentInfo.jsp\">点击返回上一页</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"main\">\r\n");
      out.write("            <div class=\"main-sector\">\r\n");
      out.write("                <!-- <ul class=\"option-ul\"> -->\r\n");
      out.write("                <form action=\"ModifyServlet?action=modifyInfo\" method=\"POST\"> \r\n");
      out.write("                ");
 if(sInfo != null){ 
      out.write("\r\n");
      out.write("                    <label>学号:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"sid\" value=\"");
      out.print(sInfo.getsId());
      out.write("\"  disabled=\"disabled\"></br>\r\n");
      out.write("                    <label>姓名:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"name\" value=\"");
      out.print(sInfo.getName() );
      out.write("\"></br>\r\n");
      out.write("                    <label>专业:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"major\" value=\"");
      out.print(sInfo.getMajor() );
      out.write("\"></br>\r\n");
      out.write("                    <label>年龄:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"age\" value=\"");
      out.print(sInfo.getAge() );
      out.write("\"></br>\r\n");
      out.write("                    <label>性别:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"sex\" value=\"");
      out.print(sInfo.getSex() );
      out.write("\"></br>\r\n");
      out.write("                    <label>班级:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"class_\" value=\"");
      out.print(sInfo.getClass_() );
      out.write("\"></br>\r\n");
      out.write("                    <label>职位:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"position\" value=\"");
      out.print(sInfo.getPosition() );
      out.write("\"></br>\r\n");
      out.write("                    <label>宿舍:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"dormitory\" value=\"");
      out.print(sInfo.getDormitory() );
      out.write("\"></br>\r\n");
      out.write("                    <label>电话:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"phoneNum\" value=\"");
      out.print(sInfo.getPhoneNum() );
      out.write("\"></br>\r\n");
      out.write("                    <label>邮箱:</label>&nbsp;&nbsp;<input class=\"fixInfo\" type=\"text\" name=\"email\" value=\"");
      out.print(sInfo.getEmail() );
      out.write("\"> </br>       \r\n");
      out.write("                    \r\n");
      out.write("                    <input class= \"submit\" type=\"submit\" >\r\n");
      out.write("                ");
}else{
                
      out.write("\r\n");
      out.write("                <h3>系统出错！无数据加载！</h3>\r\n");
      out.write("                ");
} 
      out.write("\r\n");
      out.write("                </form>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
